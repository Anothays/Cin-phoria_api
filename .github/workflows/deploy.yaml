name: Deploy image to Docker hub

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.2
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cinephoriatest_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=5s --health-timeout=5s --health-retries=10
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo, pdo_mysql, mongodb
          tools: composer, phpunit

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist
        env:
          JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
          JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
          JWT_PASSPHRASE: "changeMe"
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/cinephoriatest_db
          MONGODB_URL: mongodb://root:root@127.0.0.1:27017
          BASE_URL_FRONT: http://localhost:3000

      - name: setup databases
        run: php bin/console d:d:r -df
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/cinephoriatest_db
          MONGODB_URL: mongodb://root:root@127.0.0.1:27017
          BASE_URL_FRONT: http://localhost:3000
          APP_SECRET: "app_secret"

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
        env:
          APP_ENV: test
          APP_SECRET: "app_secret"
          BASE_URL_FRONT: "http://localhost:3000"
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          CORS_ALLOW_ORIGIN: '^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
          JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
          JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
          JWT_PASSPHRASE: "changeMe"
          KERNEL_CLASS: 'App\Kernel'
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/cinephoriatest_db
          MONGODB_URL: mongodb://root:root@127.0.0.1:27017
          MAILER_DSN: "smtp://changeMe@changeMe:changeMe@smtp.mail.ovh.net:465"

  docker:
    # if: ${{ !vars.SKIP_JOB }} # Just for testing
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: anothay/cinephoria_api:latest

  deploy:
    needs: docker
    name: deploy image on VPS
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.1.0
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: cd ${{ secrets.SSH_WORKDIR }} && docker compose pull && docker compose up -d --pull always
