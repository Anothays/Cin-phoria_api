name: Deploy image to Docker hub

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  docker:
    if: ${{ !vars.SKIP_JOB }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: anothay/cinephoria_api:latest

  deploy:
    # needs: docker
    name: deploy image on VPS
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.1.0
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: cd ${{ secrets.SSH_WORKDIR }} && docker compose pull && docker compose up -d --build

  # deploy:
  #   needs: docker
  #   name: deploy image on VPS
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: install ssh keys
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
  #         chmod 600 ~/.ssh/id_ed25519
  #         ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
  #     - name: connect and pull
  #       run: ssh ${{ secrets.SSH_USER }}@{{ secrets.SSH.HOST }} -p ${{ secrets.SSH_PORT }} "cd ${{ secrets.SSH_WORKDIR }} && docker compose pull && docker compose up -d && exit "
  #     - name: cleanup
  #       run: rm -rf ~/.ssh
